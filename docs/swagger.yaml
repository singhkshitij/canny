basePath: /
definitions:
  alphavantage.DailyCurrencyDataResponse:
    properties:
      Meta Data:
        $ref: '#/definitions/alphavantage.MetaDataResponse'
      Time Series (Digital Currency Daily):
        additionalProperties:
          $ref: '#/definitions/alphavantage.PriceDataResponse'
        type: object
    type: object
  alphavantage.LatestPrice:
    properties:
      closeINR:
        type: string
      closeUSD:
        type: string
      highINR:
        type: string
      highUSD:
        type: string
      lowINR:
        type: string
      lowUSD:
        type: string
      openINR:
        type: string
      openUSD:
        type: string
    type: object
  alphavantage.MetaDataResponse:
    properties:
      1. Information:
        type: string
      2. Digital Currency Code:
        type: string
      3. Digital Currency Name:
        type: string
      4. Market Code:
        type: string
      5. Market Name:
        type: string
      6. Last Refreshed:
        type: string
      7. Time Zone:
        type: string
      8. Latest Price:
        $ref: '#/definitions/alphavantage.LatestPrice'
    type: object
  alphavantage.PriceDataResponse:
    properties:
      1a. open (INR):
        type: string
      1b. open (USD):
        type: string
      2a. high (INR):
        type: string
      2b. high (USD):
        type: string
      3a. low (INR):
        type: string
      3b. low (USD):
        type: string
      4a. close (INR):
        type: string
      4b. close (USD):
        type: string
      5. volume:
        type: string
      6. market cap (USD):
        type: string
    type: object
  model.AllCurrencyPriceResponse:
    properties:
      code:
        type: integer
      data:
        additionalProperties:
          $ref: '#/definitions/alphavantage.LatestPrice'
        type: object
      msg:
        type: string
    type: object
  model.CreateAlertRequest:
    properties:
      currency:
        type: string
      name:
        type: string
      operator:
        type: string
      percentage:
        type: integer
      property:
        type: string
      value:
        type: number
    required:
    - currency
    - name
    - operator
    - property
    type: object
  model.CreateAlertResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.CreateAlertResponseData'
      msg:
        type: string
    type: object
  model.CreateAlertResponseData:
    properties:
      createdAt:
        type: string
      currency:
        type: string
      id:
        type: string
      name:
        type: string
      operator:
        type: string
      percentage:
        type: integer
      property:
        type: string
      value:
        type: number
    type: object
  model.CurrenciesResponse:
    properties:
      code:
        type: integer
      data:
        items:
          type: string
        type: array
      msg:
        type: string
    type: object
  model.CurrencyDataResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/alphavantage.DailyCurrencyDataResponse'
      msg:
        type: string
    type: object
  model.DryRunAlertResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.DryRunAlertStatus'
      msg:
        type: string
    type: object
  model.DryRunAlertStatus:
    properties:
      passed:
        type: boolean
    type: object
  model.GetAllAlertResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.CreateAlertResponseData'
        type: array
      msg:
        type: string
    type: object
  model.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
info:
  contact:
    email: singh_kshitij@yahoo.com
    name: Kshitij
    url: https://github.com/singhkshitij
  description: This is a sample server Canny server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Canny documentation
  version: "1.0"
paths:
  /api/v1/alerts:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetAllAlertResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get all alerts for user
      tags:
      - alerts
    post:
      parameters:
      - description: Alert Alerts
        in: body
        name: alert
        required: true
        schema:
          $ref: '#/definitions/model.CreateAlertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CreateAlertResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create an alert for user
      tags:
      - alerts
  /api/v1/alerts/{id}:
    delete:
      parameters:
      - description: alert id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete active alert
      tags:
      - alerts
    get:
      parameters:
      - description: alert id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CreateAlertResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get alert details
      tags:
      - alerts
  /api/v1/alerts/dry-run:
    post:
      parameters:
      - description: Alert Data
        in: body
        name: alert
        required: true
        schema:
          $ref: '#/definitions/model.CreateAlertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DryRunAlertResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Dry run an alert
      tags:
      - test
  /api/v1/currencies:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CurrenciesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get supported currencies
      tags:
      - currency
  /api/v1/currencies/{currency}:
    get:
      parameters:
      - description: Symbol
        in: path
        name: currency
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CurrencyDataResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get coin data
      tags:
      - currency
  /api/v1/currencies/price:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AllCurrencyPriceResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get all coin last price
      tags:
      - currency
  /ping:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: health check endpoint
      tags:
      - health-check
swagger: "2.0"
