// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Kshitij",
            "url": "https://github.com/singhkshitij",
            "email": "singh_kshitij@yahoo.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/alert": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alert"
                ],
                "summary": "Get coin data",
                "parameters": [
                    {
                        "description": "Alert Data",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateAlertRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CreateAlertResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/currencies": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "Get supported currencies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CurrenciesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/currencies/price": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "Get all coin last price",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AllCurrencyPriceResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/currencies/{currency}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "Get coin data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "currency",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CurrencyDataResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health-check"
                ],
                "summary": "health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "alphavantage.DailyCurrencyDataResponse": {
            "type": "object",
            "properties": {
                "Meta Data": {
                    "$ref": "#/definitions/alphavantage.MetaData"
                },
                "Time Series (Digital Currency Daily)": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/alphavantage.PriceDataResponse"
                    }
                }
            }
        },
        "alphavantage.MetaData": {
            "type": "object",
            "properties": {
                "2. Digital Currency Code": {
                    "type": "string"
                },
                "3. Digital Currency Name": {
                    "type": "string"
                },
                "6. Last Refreshed": {
                    "type": "string"
                },
                "7. Time Zone": {
                    "type": "string"
                }
            }
        },
        "alphavantage.PriceDataResponse": {
            "type": "object",
            "properties": {
                "4a. close (INR)": {
                    "type": "string"
                },
                "4b. close (USD)": {
                    "type": "string"
                }
            }
        },
        "model.AllCurrencyPriceResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.ClosingPrice"
                    }
                }
            }
        },
        "model.ClosingPrice": {
            "type": "object",
            "properties": {
                "inr": {
                    "type": "string"
                },
                "usd": {
                    "type": "string"
                }
            }
        },
        "model.CreateAlertRequest": {
            "type": "object",
            "required": [
                "currency",
                "name",
                "operator",
                "percentage",
                "property",
                "symbol",
                "value"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "percentage": {
                    "type": "integer"
                },
                "property": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "model.CreateAlertResponse": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "percentage": {
                    "type": "integer"
                },
                "property": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "model.CurrenciesResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.CurrencyDataResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/alphavantage.DailyCurrencyDataResponse"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Canny documentation",
	Description: "This is a sample server Canny server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
